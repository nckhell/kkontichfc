{"version":3,"file":"static/webpack/static/development/pages/ranking.js.102f9e2d2c0b4140c2b4.hot-update.js","sources":["webpack:///./pages/ranking.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport fetch from \"../src/services/api/fetch\";\nimport kbvbApiUrls from \"../src/config/api/kbvb_graphql\";\nimport RankingComponent from \"../src/components/ranking/RankingComponent\";\n\nclass RankingPage extends Component {\n  state = {\n    isLoading: true,\n    rankings: [],\n    error: null\n  };\n\n  componentDidMount() {\n    this.fetchRanking();\n  }\n\n  fetchRanking() {\n    const { teamID } = this.props;\n\n    fetch(kbvbApiUrls[teamID].ranking.url)\n      .then(data =>\n        this.setState({\n          rankings: data.data.seriesRankings,\n          isLoading: false\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    const { isLoading, rankings, error } = this.state;\n\n    return (\n      <React.Fragment>\n        <h1>Calendar</h1>\n        {error ? <p>{error.message}</p> : null}\n        {!isLoading ? (\n          <RankingComponent rankings={rankings} />\n        ) : (\n          // If there is a delay in data, let's let the user know it's loading\n          <h3>Loading...</h3>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nRankingPage.propTypes = {\n  teamID: PropTypes.string.isRequired\n};\n\nRankingPage.getInitialProps = ({ query }) => {\n  const { teamID } = query;\n  return { teamID };\n};\n\nexport default RankingPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;AAKA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvCA;AACA;AAyCA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}